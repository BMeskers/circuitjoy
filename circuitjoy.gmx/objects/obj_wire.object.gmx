<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wirePickup = true;
wireplaced = false;
from = 0;
to = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.wirePickup and !wireplaced){
    placeComponent = instance_position(mouse_x, mouse_y, obj_component);
    if (placeComponent != noone){
        
        //check on which side this component is pressed
        //right side
        if (mouse_x &gt; placeComponent.x + placeComponent.sprite_width / 2){
            if (from = 0 and placeComponent != to){
                from = placeComponent;
                global.wirePickup = false;
                wireplaced = true;
            }
        //left side
        }else {
            if (to = 0 and placeComponent != from){
                //check if top side
                if (mouse_y &lt; placeComponent.y + placeComponent.sprite_height / 2){
                    if (placeComponent.input1Wire = 0){
                        to = placeComponent;
                        placeComponent.input1Wire = self;
                        global.wirePickup = false;
                        wireplaced = true;
                    }
                //bottom side
                }else{
                    if (placeComponent.input2Wire = 0){
                        to = placeComponent;
                        placeComponent.input2Wire = self;
                        global.wirePickup = false;
                        wireplaced = true;
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wireWidth = 3;
draw_set_colour($00AB34);

if (global.wirePickup and !wireplaced){
    if (from != 0){
        drawX = from.x + from.sprite_width;
        drawY = from.y + from.sprite_height / 2;
    }else {
        drawX = to.x;
        drawY = to.y + to.sprite_height / 4;
        if (self = to.input2Wire){
            drawY += to.sprite_height / 2;
        }
         
    }
    draw_line_width(drawX, drawY, mouse_x, mouse_y, wireWidth);
}else {
    if (from.output){
        draw_set_colour($f3f57f);
    }
    fromX = from.x + from.sprite_width;
    fromY = from.y + from.sprite_height / 2;
    
    toX = to.x;
    toY = to.y + to.sprite_height / 4;
    if (self = to.input2Wire){
        toY += to.sprite_height / 2;
    }
        
    draw_line_width(fromX, fromY, toX, toY, wireWidth);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
